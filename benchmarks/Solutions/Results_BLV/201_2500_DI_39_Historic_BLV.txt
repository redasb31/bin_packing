
Some demands missing/bad format, assumed 1

  LP VAL=65.00694706640591, N Cols = 1018 
  LP VAL=65.00008438527516, N Cols = 2026  

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



  LP VAL=65.00003521844354, N Cols = 3030 
  LP VAL=65.00001827220808, N Cols = 4033  

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65 1.538% n4701 m1 nd0 Nn0/1 d0 LR 0/0 i1Too long col gen, trying to reduce maxCuts by 1<=n<=20%...
 

          WARNING: NO CUTS USED ANY MORE. 




"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4701 m0 nd0 Nn0/1 d0 LR 0/0 i1
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4715 m0 nd1<-0 Nn1/3 d1 LR 0/1
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4770 m0 nd2<-1 Nn2/5 d2 LR 0/3 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65 1.538% n4827 m0 nd3<-2 Nn3/7 d3 LR 0/6
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4876 m0 nd4<-3 Nn4/9 d4 LR 0/10
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4887 m0 nd5<-4 Nn5/10 d5 LR 0/15
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4892 m0 nd5.5<-4 Nn4/10 d5 LR 1/19 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4909 m0 nd7<-5.5 Nn5/12 d6 LR 2/24
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4934 m0 nd8.5<-7 Nn5/11 d7 LR 5/35
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4937 m0 nd7.5<-5.5 Nn4/8 d6 LR 7/39
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4945 m0 nd12<-4.5 Nn4/10 d5 LR 9/46
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4961 m0 nd13<-12 Nn5/11 d6 LR 10/51
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4968 m0 nd13.5<-12 Nn4/11 d6 LR 12/55
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4974 m0 nd15<-13.5 Nn5/12 d7 LR 14/60
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4976 m0 nd15.5<-13.5 Nn4/9 d7 LR 17/64
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4976 m0 nd12.5<-4.5 Nn3/9 d5 LR 19/67
"201_2500_DI_39.txt" #1 U66 L64.99999999999999 1.538% n4988 m0 nd18<-12.5 Nn4/11 d6 LR 21/71
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n4988 m0 nd19<-18 Nn5/13 d7 LR 23/76
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5003 m0 nd20<-19 Nn6/15 d8 LR 25/82
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5005 m0 nd21<-20 Nn7/16 d9 LR 27/89 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5012 m0 nd20.5<-19 Nn5/14 d8 LR 33/100
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5016 m0 nd24<-20.5 Nn6/16 d9 LR 36/106
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5028 m0 nd24.5<-20.5 Nn5/15 d9 LR 47/124
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5033 m0 nd28<-24.5 Nn6/16 d10 LR 51/130
  LP VAL=65.00000830273429, N Cols = 5034 
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5048 m0 nd30<-28.5 Nn6/17 d11 LR 61/141
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5051 m0 nd30.5<-28.5 Nn5/12 d11 LR 67/146
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5052 m0 nd19.5<-18 Nn4/12 d7 LR 70/150
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5053 m0 nd33<-19.5 Nn5/13 d8 LR 73/155
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5053 m0 nd33.5<-19.5 Nn4/13 d8 LR 77/159
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5061 m0 nd35.5<-33.5 Nn4/10 d9 LR 86/168
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5061 m0 nd18.5<-12.5 Nn3/10 d6 LR 89/171
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5066 m0 nd38<-18.5 Nn4/12 d7 LR 92/175
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5067 m0 nd39<-38 Nn5/14 d8 LR 95/180
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5067 m0 nd40<-39 Nn6/15 d9 LR 98/186
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5070 m0 nd40.5<-39 Nn5/13 d9 LR 102/191
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5071 m0 nd43<-39.5 Nn5/15 d9 LR 110/200
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5071 m0 nd44<-43 Nn6/16 d10 LR 114/206
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5076 m0 nd43.5<-39.5 Nn4/14 d9 LR 124/215
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5076 m0 nd49<-47.5 Nn5/16 d11 LR 141/229
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5078 m0 nd49.5<-47.5 Nn4/16 d11 LR 148/233
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5078 m0 nd51<-49.5 Nn5/18 d12 LR 155/238
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5087 m0 nd52<-51 Nn6/19 d13 LR 162/244
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5088 m0 nd51.5<-49.5 Nn4/11 d12 LR 178/253 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65 1.538% n5090 m0 nd56.5<-38.5 Nn3/12 d8 LR 191/263
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5095 m0 nd58<-56.5 Nn4/14 d9 LR 196/267
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5096 m0 nd59.5<-58 Nn4/15 d10 LR 207/276
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5098 m0 nd61<-59.5 Nn5/17 d11 LR 213/281
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5099 m0 nd62<-61 Nn6/18 d12 LR 219/287
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5110 m0 nd62.5<-61 Nn5/16 d12 LR 226/292
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5113 m0 nd61.5<-59.5 Nn4/13 d11 LR 233/296
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5113 m0 nd58.5<-56.5 Nn3/13 d9 LR 239/299
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5114 m0 nd66.5<-58.5 Nn3/14 d10 LR 252/306
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5114 m0 nd68<-66.5 Nn4/15 d11 LR 259/310
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5115 m0 nd68.5<-66.5 Nn3/6 d11 LR 267/313
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5125 m0 nd73<-72 Nn5/12 d6 LR 271/327
"201_2500_DI_39.txt" #1 U66 L64.99999999999999 1.538% n5136 m0 nd74<-73 Nn6/14 d7 LR 272/333
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5156 m0 nd75<-74 Nn7/16 d8 LR 273/340
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5160 m0 nd76<-75 Nn8/18 d9 LR 274/348
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5165 m0 nd77<-76 Nn9/19 d10 LR 275/357
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5171 m0 nd77.5<-76 Nn8/17 d10 LR 277/365 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5177 m0 nd76.5<-75 Nn7/17 d9 LR 279/372
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5179 m0 nd80<-76.5 Nn8/18 d10 LR 281/380
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5189 m0 nd80.5<-76.5 Nn7/15 d10 LR 284/387
"201_2500_DI_39.txt" #1 U66 L65 1.538% n5192 m0 nd75.5<-74 Nn6/15 d8 LR 286/393
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5199 m0 nd83<-75.5 Nn7/17 d9 LR 288/400
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5212 m0 nd84<-83 Nn8/19 d10 LR 290/408
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5227 m0 nd85<-84 Nn9/20 d11 LR 292/417
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5235 m0 nd84.5<-83 Nn7/18 d10 LR 298/432
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5239 m0 nd88<-84.5 Nn8/19 d11 LR 301/440
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5242 m0 nd88.5<-84.5 Nn7/16 d11 LR 305/447
"201_2500_DI_39.txt" #1 U66 L65 1.538% n5244 m0 nd83.5<-75.5 Nn6/16 d9 LR 308/453
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5247 m0 nd91<-83.5 Nn7/18 d10 LR 311/460
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5249 m0 nd92<-91 Nn8/19 d11 LR 314/468
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5250 m0 nd92.5<-91 Nn7/17 d11 LR 318/475
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5252 m0 nd95<-91.5 Nn7/19 d11 LR 326/488
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5253 m0 nd96<-95 Nn8/20 d12 LR 330/496 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5259 m0 nd98.5<-96.5 Nn7/18 d13 LR 346/518
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5259 m0 nd95.5<-91.5 Nn6/18 d11 LR 351/524
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5260 m0 nd101<-95.5 Nn7/19 d12 LR 356/531
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5263 m0 nd103<-101.5 Nn7/20 d13 LR 368/544
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5265 m0 nd103.5<-101.5 Nn6/13 d13 LR 375/550
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5272 m0 nd107.5<-106 Nn6/16 d9 LR 384/574
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5273 m0 nd109<-107.5 Nn7/17 d10 LR 387/581
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5274 m0 nd109.5<-107.5 Nn6/17 d10 LR 391/587
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5276 m0 nd111<-109.5 Nn7/19 d11 LR 395/594
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5281 m0 nd111.5<-109.5 Nn6/14 d11 LR 409/615
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5286 m0 nd116<-106.5 Nn6/15 d9 LR 415/626
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5287 m0 nd116.5<-106.5 Nn5/15 d9 LR 419/631
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5289 m0 nd118<-116.5 Nn6/16 d10 LR 423/637
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5291 m0 nd118.5<-116.5 Nn5/11 d10 LR 428/642
"201_2500_DI_39.txt" #1 U66 L65 1.538% n5315 m0 nd122<-121 Nn6/15 d8 LR 434/657
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5325 m0 nd123<-122 Nn7/16 d9 LR 436/664
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5341 m0 nd129<-128 Nn7/17 d10 LR 455/701
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5354 m0 nd132<-131 Nn8/21 d12 LR 467/722
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5356 m0 nd133<-132 Nn9/23 d13 LR 471/731
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5364 m0 nd134<-133 Nn10/25 d14 LR 475/741 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5377 m0 nd135<-134 Nn11/26 d15 LR 479/752
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5383 m0 nd135.5<-134 Nn10/24 d15 LR 484/762
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5384 m0 nd134.5<-133 Nn9/22 d14 LR 489/771
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5385 m0 nd133.5<-132 Nn8/22 d13 LR 494/779
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5385 m0 nd139<-133.5 Nn9/23 d14 LR 499/788
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5388 m0 nd141<-139.5 Nn9/24 d15 LR 511/805
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5395 m0 nd132.5<-131 Nn7/18 d12 LR 523/820
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5406 m0 nd131.5<-129.5 Nn6/18 d11 LR 528/826
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5414 m0 nd145<-131.5 Nn7/19 d12 LR 533/833
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5416 m0 nd145.5<-131.5 Nn6/15 d12 LR 539/839
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5418 m0 nd149<-148 Nn7/19 d11 LR 551/857
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5421 m0 nd150.5<-149 Nn7/18 d12 LR 560/872
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5422 m0 nd149.5<-148 Nn6/18 d11 LR 565/878
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5429 m0 nd153<-149.5 Nn7/19 d12 LR 570/885
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5430 m0 nd148.5<-128.5 Nn5/16 d10 LR 581/896
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5432 m0 nd156<-148.5 Nn6/18 d11 LR 586/902
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5438 m0 nd157<-156 Nn7/19 d12 LR 591/909
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5439 m0 nd156.5<-148.5 Nn5/17 d11 LR 603/920
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5442 m0 nd160<-156.5 Nn6/18 d12 LR 609/926
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5442 m0 nd160.5<-156.5 Nn5/18 d12 LR 616/931
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5442 m0 nd162<-160.5 Nn6/19 d13 LR 623/937
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5443 m0 nd162.5<-160.5 Nn5/12 d13 LR 631/942 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5447 m0 nd166<-165 Nn6/16 d9 LR 640/957
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5455 m0 nd167.5<-166 Nn6/17 d10 LR 647/970
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5459 m0 nd169.5<-167.5 Nn6/15 d11 LR 656/983
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5461 m0 nd172<-166.5 Nn6/17 d10 LR 664/994
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5464 m0 nd173.5<-172 Nn6/18 d11 LR 673/1007
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5467 m0 nd175<-173.5 Nn7/19 d12 LR 678/1014
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5467 m0 nd175.5<-173.5 Nn6/16 d12 LR 684/1020
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5468 m0 nd178<-172.5 Nn6/18 d11 LR 694/1031
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5476 m0 nd179.5<-178 Nn6/19 d12 LR 705/1044
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5476 m0 nd181<-179.5 Nn7/20 d13 LR 711/1051
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5476 m0 nd181.5<-179.5 Nn6/20 d13 LR 718/1057
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5478 m0 nd183<-181.5 Nn7/21 d14 LR 725/1064
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5480 m0 nd183.5<-181.5 Nn6/17 d14 LR 733/1070
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5481 m0 nd178.5<-172.5 Nn5/13 d11 LR 739/1075
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5481 m0 nd188<-187 Nn6/17 d10 LR 751/1090
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5482 m0 nd190<-189 Nn8/20 d12 LR 759/1105
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5484 m0 nd190.5<-189 Nn7/18 d12 LR 764/1112
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5485 m0 nd193<-189.5 Nn7/19 d12 LR 774/1125
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5485 m0 nd193.5<-189.5 Nn6/16 d12 LR 780/1131
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5487 m0 nd196<-188.5 Nn6/18 d11 LR 790/1142
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5494 m0 nd197.5<-196 Nn6/19 d12 LR 801/1155
"201_2500_DI_39.txt" #1 U66 L65 1.538% n5495 m0 nd202<-196.5 Nn6/19 d12 LR 826/1179
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5496 m0 nd203<-202 Nn7/20 d13 LR 832/1186
"201_2500_DI_39.txt" #1 U66 L65 1.538% n5499 m0 nd202.5<-196.5 Nn5/18 d12 LR 846/1197
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5500 m0 nd206<-202.5 Nn6/20 d13 LR 853/1203
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5504 m0 nd208<-207 Nn8/23 d15 LR 867/1218
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5505 m0 nd207.5<-206 Nn6/21 d14 LR 883/1231
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5513 m0 nd206.5<-202.5 Nn5/14 d13 LR 908/1249
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5518 m0 nd215<-187.5 Nn5/16 d10 LR 918/1258
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5520 m0 nd216<-215 Nn6/18 d11 LR 923/1264 

  BB Col Gen has taken >1e+06 steps (see settings [BB]) and not found any solution with neg red cost. After 2e+08 steps (see BB.nSteps), automatic switching to KP col gen and AFF branching --- to do it manually, set:
 CSP1.fRootPricing=1, BCP.fLocalUB=0 and seem better BCP.fLocaLReduce=0 with Subgr.nIterMax=0.  For the faster AFF branching, set BCP.nBranch=1, CSP1.nHP=1,  and BCP1.maxCuts=0 and better CSP1.fModelEquality=1 (see README)



"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5520 m0 nd218<-217 Nn8/21 d13 LR 933/1279
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5527 m0 nd218.5<-217 Nn7/19 d13 LR 939/1286
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5527 m0 nd217.5<-216 Nn6/17 d12 LR 945/1292
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5530 m0 nd222<-216.5 Nn6/18 d12 LR 957/1303
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5535 m0 nd225.5<-224 Nn6/19 d14 LR 986/1327
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5537 m0 nd228<-224.5 Nn6/20 d14 LR 1002/1338
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5538 m0 nd231<-215.5 Nn5/17 d11 LR 1023/1352
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5538 m0 nd232<-231 Nn6/18 d12 LR 1029/1358
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5540 m0 nd232.5<-231 Nn5/18 d12 LR 1036/1363
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5542 m0 nd237<-231.5 Nn5/18 d12 LR 1065/1383
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5543 m0 nd238<-237 Nn6/20 d13 LR 1072/1389
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5546 m0 nd239.5<-238 Nn6/19 d14 LR 1087/1402
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5547 m0 nd238.5<-237 Nn5/19 d13 LR 1095/1407
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5549 m0 nd242<-238.5 Nn6/20 d14 LR 1103/1413
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5550 m0 nd244<-242.5 Nn6/21 d15 LR 1121/1424
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5551 m0 nd237.5<-231.5 Nn4/17 d12 LR 1139/1433
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5551 m0 nd247<-237.5 Nn5/19 d13 LR 1147/1438
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5552 m0 nd249<-248 Nn7/22 d15 LR 1163/1451
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5553 m0 nd249.5<-248 Nn6/20 d15 LR 1172/1457
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5554 m0 nd248.5<-247 Nn5/18 d14 LR 1181/1462
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5554 m0 nd247.5<-237.5 Nn4/18 d13 LR 1190/1466
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5557 m0 nd254<-253 Nn6/21 d15 LR 1208/1477
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5557 m0 nd254.5<-253 Nn5/19 d15 LR 1218/1482
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5557 m0 nd253.5<-247.5 Nn4/19 d14 LR 1228/1486
"201_2500_DI_39.txt" #1 U66 L65.00000000000001 1.538% n5557 m0 nd257.5<-253.5 Nn4/9 d15 LR 1249/1495 

  BB Col Gen has taken 2.00001e+08 steps (see settings [BB]) and not found any solution with neg red cost. Switching to KP col gen and AFF branching (see README)


 RESTARTING INSTANCE... 

  LP VAL=65.03269767865581, N Cols = 1001 
"201_2500_DI_39.txt" #1 U66 L65 1.538% n1353 m0 nd0 Nn0/1 d0 LR 0/0
"201_2500_DI_39.txt" #1 U65 L65 0% n1385 m3 nd4<-3 Nn2/5 d3 LR 3/4
"201_2500_DI_39.txt" #1 U65 L65 0% n1385 m3 nd4<-3 Nn2/5 d3 LR 3/4 STAT OPT
nTooLongColGen:1
