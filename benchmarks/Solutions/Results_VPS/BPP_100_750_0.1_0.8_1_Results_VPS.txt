Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 9494
  Step-3' Graph: 330 vertices and 5281 arcs (0.01s)
  Step-4' Graph: 310 vertices and 5241 arcs (0.02s)
  #V4/#V3 = 0.94
  #A4/#A3 = 0.99
Ready! (0.02s)
Optimize a model with 403 rows, 5242 columns and 15110 nonzeros
Found heuristic solution: objective 79
Presolve removed 50 rows and 51 columns
Presolve time: 0.04s
Presolved: 353 rows, 5191 columns, 14950 nonzeros
Variable types: 0 continuous, 5191 integer (4036 binary)
Optimize a model with 353 rows, 5191 columns and 14950 nonzeros
Presolved: 353 rows, 5191 columns, 14950 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 8.596e+03
 Factor NZ  : 2.399e+04 (roughly 2 MBytes of memory)
 Factor Ops : 2.357e+06 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   2.19955092e+03 -1.33906268e+04  2.22e+04 9.43e-02  1.02e+01     0s
   1   7.09333121e+02 -4.36668757e+03  3.02e+03 6.66e-16  1.62e+00     0s
   2   2.44828128e+02 -1.03132024e+03  4.76e+02 6.66e-16  2.89e-01     0s
   3   1.02692742e+02 -1.96117261e+02  5.44e+01 3.05e-16  4.66e-02     0s
   4   6.34632988e+01 -1.88964097e+01  8.49e+00 5.55e-16  1.03e-02     0s
   5   5.28503265e+01  8.39614377e+00  2.17e+00 3.33e-16  4.78e-03     0s
   6   4.97490435e+01  2.64058608e+01  1.20e+00 4.06e-16  2.45e-03     0s
   7   4.69518616e+01  3.29708089e+01  6.53e-01 5.55e-16  1.44e-03     0s
   8   4.62494481e+01  3.48752554e+01  5.23e-01 3.42e-16  1.16e-03     0s
   9   4.49001985e+01  3.72747423e+01  2.85e-01 4.44e-16  7.63e-04     0s
  10   4.39787018e+01  4.05178505e+01  7.82e-02 7.16e-07  3.38e-04     0s
  11   4.34502780e+01  4.19983898e+01  1.17e-02 7.77e-16  1.40e-04     0s
  12   4.33910641e+01  4.21204819e+01  9.37e-03 4.14e-16  1.23e-04     0s
  13   4.32879158e+01  4.24770856e+01  5.55e-03 4.53e-16  7.83e-05     0s
  14   4.31844394e+01  4.26366888e+01  2.92e-03 4.44e-16  5.28e-05     0s
  15   4.31174756e+01  4.28402617e+01  1.27e-03 6.66e-16  2.67e-05     0s
  16   4.30725103e+01  4.29025664e+01  4.19e-04 4.44e-16  1.64e-05     0s
  17   4.30488039e+01  4.29717663e+01  1.20e-04 3.33e-16  7.42e-06     0s
  18   4.30387149e+01  4.29974318e+01  4.84e-05 3.62e-16  3.98e-06     0s
  19   4.30315366e+01  4.30141662e+01  7.65e-06 3.33e-16  1.67e-06     0s
  20   4.30299718e+01  4.30259857e+01  2.38e-06 4.44e-16  3.84e-07     0s
  21   4.30292722e+01  4.30290940e+01  2.42e-07 4.21e-16  1.72e-08     0s
  22   4.30291737e+01  4.30291733e+01  2.36e-10 4.44e-16  4.26e-11     0s
  23   4.30291734e+01  4.30291734e+01  1.35e-11 4.44e-16  4.26e-14     0s

Barrier solved model in 23 iterations and 0.07 seconds
Optimal objective 4.30291734e+01


Root relaxation: objective 4.302917e+01, 324 iterations, 0.07 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   43.02917    0   57   79.00000   43.02917  45.5%     -    0s
H    0     0                      44.0000000   43.02917  2.21%     -    0s

Explored 0 nodes (544 simplex iterations) in 0.16 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 4.400000000000e+01, best bound 4.400000000000e+01, gap 0.0%
Preprocessing time: 0.03 seconds
Gurobi run time: 0.16 seconds
Total run time: 0.19 seconds
Objective: 44
Solution:
1 x [i=1, i=80]
1 x [i=2, i=78]
1 x [i=3, i=81]
1 x [i=4, i=76]
1 x [i=5, i=73]
1 x [i=6, i=72]
1 x [i=7, i=72]
1 x [i=8, i=70]
1 x [i=9, i=70]
1 x [i=10, i=69]
1 x [i=11, i=85, i=93]
1 x [i=12, i=68]
1 x [i=13, i=83, i=91]
1 x [i=14, i=65]
1 x [i=15, i=64]
1 x [i=16, i=63]
1 x [i=17, i=62]
1 x [i=18, i=84, i=86]
1 x [i=19, i=60]
1 x [i=20, i=79, i=91]
1 x [i=21, i=56]
1 x [i=22, i=58]
1 x [i=23, i=57]
1 x [i=24, i=55]
1 x [i=25, i=89]
1 x [i=26, i=54]
1 x [i=27, i=53]
1 x [i=28, i=74, i=87]
1 x [i=29, i=52]
1 x [i=30, i=49]
1 x [i=31, i=48]
1 x [i=32, i=42]
1 x [i=33, i=41]
1 x [i=34, i=38]
1 x [i=34, i=39]
1 x [i=35, i=59, i=92]
1 x [i=36, i=37]
1 x [i=40, i=67, i=73]
1 x [i=43, i=44, i=90]
1 x [i=45, i=66, i=71]
1 x [i=46, i=61, i=77]
1 x [i=47, i=75]
1 x [i=50, i=51, i=82]
1 x [i=62, i=75, i=88]
