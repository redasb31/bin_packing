Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 40800
  Step-3' Graph: 661 vertices and 12071 arcs (0.16s)
  Step-4' Graph: 651 vertices and 12051 arcs (0.16s)
  #V4/#V3 = 0.98
  #A4/#A3 = 1.00
Ready! (0.16s)
Optimize a model with 694 rows, 12052 columns and 34868 nonzeros
Presolve removed 13 rows and 25 columns
Presolve time: 0.05s
Presolved: 681 rows, 12027 columns, 34821 nonzeros
Variable types: 0 continuous, 12027 integer (0 binary)
Optimize a model with 681 rows, 12027 columns and 34821 nonzeros
Presolved: 681 rows, 12027 columns, 34821 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 2.282e+04
 Factor NZ  : 7.417e+04 (roughly 6 MBytes of memory)
 Factor Ops : 1.090e+07 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.58370608e+04 -8.04326858e+05  2.89e+05 2.22e-16  2.74e+02     0s
   1   4.69830312e+03 -2.10760149e+05  5.81e+04 2.89e-15  5.44e+01     0s
   2   1.70270767e+03 -9.79083272e+04  1.53e+04 1.73e-03  1.49e+01     0s
   3   8.50353792e+02 -4.40219988e+04  4.41e+03 1.24e-14  4.39e+00     0s
   4   5.35350295e+02 -1.91305727e+04  4.46e+02 2.04e-14  1.03e+00     0s
   5   5.03150795e+02 -6.44997261e+03  5.38e+01 1.91e-14  3.06e-01     0s
   6   4.97262387e+02 -1.59640689e+03  1.53e-01 6.44e-15  8.69e-02     0s
   7   4.82807490e+02 -1.56898181e+03  1.10e-01 5.66e-15  8.52e-02     0s
   8   4.57993104e+02 -1.43893425e+03  9.48e-02 5.77e-15  7.87e-02     0s
   9   3.99947224e+02 -9.16192360e+02  6.23e-02 4.01e-15  5.46e-02     0s
  10   2.88868712e+02 -7.57676712e+02  4.14e-02 3.90e-15  4.34e-02     0s
  11   2.39474414e+02 -4.47208499e+02  3.26e-02 4.26e-15  2.85e-02     0s
  12   1.83459625e+02 -1.52497263e+02  2.48e-02 3.16e-15  1.39e-02     0s
  13   1.35454835e+02 -6.84241031e+01  1.78e-02 3.08e-15  8.46e-03     0s
  14   8.41839489e+01 -1.64017713e+01  9.32e-03 2.70e-15  4.17e-03     0s
  15   7.33892966e+01  4.04522066e-01  6.38e-03 3.09e-15  3.03e-03     0s
  16   7.20341003e+01  1.01555586e+01  4.59e-03 3.12e-15  2.57e-03     0s
  17   7.05320307e+01  1.55431525e+01  4.09e-03 3.52e-15  2.28e-03     0s
  18   6.76989052e+01  3.52766525e+01  2.37e-03 2.54e-15  1.35e-03     0s
  19   6.31467945e+01  4.26097874e+01  1.53e-03 2.49e-15  8.52e-04     0s
  20   5.85945609e+01  5.08422196e+01  5.68e-04 2.68e-15  3.22e-04     0s
  21   5.65860261e+01  5.36698848e+01  1.66e-04 2.36e-15  1.21e-04     0s
  22   5.61270110e+01  5.47714666e+01  8.34e-05 2.58e-15  5.63e-05     0s
  23   5.59735101e+01  5.51739575e+01  5.72e-05 2.36e-15  3.32e-05     0s
  24   5.57479012e+01  5.55117847e+01  1.89e-05 2.35e-15  9.80e-06     0s
  25   5.56363544e+01  5.56284206e+01  9.74e-13 2.93e-15  3.29e-07     0s
  26   5.56350042e+01  5.56349566e+01  7.08e-13 2.66e-15  1.98e-09     0s
  27   5.56350000e+01  5.56350000e+01  3.11e-13 2.58e-15  1.98e-12     0s

Barrier solved model in 27 iterations and 0.21 seconds
Optimal objective 5.56350000e+01


Root relaxation: objective 5.563500e+01, 8364 iterations, 0.38 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   55.63500    0  123          -   55.63500     -      -    1s
H    0     0                     115.0000000   55.63500  51.6%     -    2s
H    0     0                      57.0000000   55.63500  2.39%     -    2s
     0     0   55.63500    0  149   57.00000   55.63500  2.39%     -    5s
H    0     0                      56.0000000   55.63500  0.65%     -    7s

Cutting planes:
  MIR: 1

Explored 0 nodes (19133 simplex iterations) in 7.27 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 5.600000000000e+01, best bound 5.600000000000e+01, gap 0.0%
Preprocessing time: 0.18 seconds
Gurobi run time: 7.27 seconds
Total run time: 7.45 seconds
Objective: 56
Solution:
1 x [i=1, i=3, i=5, i=8, i=9, i=10, i=10, i=18]
1 x [i=1, i=3, i=3, i=6, i=6, i=7, i=11, i=27]
1 x [i=1, i=3, i=3, i=9, i=10, i=10, i=12, i=16]
1 x [i=1, i=3, i=3, i=19, i=31, i=31, i=35, i=37, i=37]
1 x [i=1, i=7, i=11, i=14, i=27, i=32, i=33, i=35, i=37]
1 x [i=1, i=1, i=6, i=15, i=21, i=32, i=38, i=40, i=43]
1 x [i=1, i=1, i=6, i=15, i=21, i=35, i=38, i=39, i=41]
1 x [i=1, i=1, i=9, i=19, i=23, i=29, i=32, i=40, i=43]
1 x [i=1, i=1, i=16, i=20, i=26, i=28, i=30, i=32, i=43]
1 x [i=2, i=6, i=11, i=11, i=28, i=31, i=34, i=36, i=38]
1 x [i=2, i=11, i=12, i=12, i=15, i=27, i=34, i=41, i=43]
1 x [i=2, i=12, i=14, i=20, i=23, i=26, i=27, i=33, i=40]
3 x [i=2, i=12, i=16, i=18, i=22, i=24, i=30, i=33, i=40]
1 x [i=2, i=12, i=22, i=22, i=23, i=24, i=25, i=28, i=39]
2 x [i=3, i=3, i=4, i=19, i=27, i=31, i=36, i=37, i=37]
2 x [i=4, i=6, i=7, i=8, i=25, i=30, i=36, i=38, i=43]
1 x [i=4, i=7, i=11, i=15, i=15, i=22, i=39, i=43]
2 x [i=4, i=7, i=14, i=15, i=22, i=23, i=29, i=40, i=43]
1 x [i=4, i=7, i=14, i=18, i=22, i=22, i=30, i=39, i=41]
1 x [i=4, i=7, i=15, i=15, i=23, i=28, i=30, i=32, i=43]
1 x [i=4, i=7, i=18, i=21, i=22, i=24, i=27, i=33, i=41]
1 x [i=4, i=8, i=12, i=16, i=24, i=29, i=29, i=33]
2 x [i=4, i=8, i=14, i=15, i=19, i=27, i=30, i=39, i=41]
1 x [i=4, i=9, i=14, i=18, i=18, i=27, i=27, i=39, i=41]
1 x [i=4, i=11, i=11, i=13, i=25, i=31, i=31, i=34, i=37]
2 x [i=4, i=13, i=19, i=19, i=20, i=22, i=26, i=36, i=38]
1 x [i=4, i=20, i=20, i=21, i=21, i=22, i=26, i=28, i=35]
1 x [i=5, i=8, i=14, i=20, i=21, i=27, i=29, i=33, i=40]
1 x [i=5, i=8, i=14, i=20, i=21, i=27, i=33, i=34, i=35]
1 x [i=5, i=8, i=14, i=20, i=26, i=27, i=29, i=30, i=38]
1 x [i=5, i=8, i=18, i=19, i=20, i=27, i=27, i=33, i=40]
1 x [i=5, i=10, i=10, i=10, i=21, i=34, i=34, i=34, i=39]
1 x [i=5, i=10, i=10, i=10, i=24, i=29, i=34, i=36, i=39]
3 x [i=5, i=11, i=11, i=13, i=25, i=29, i=31, i=35, i=37]
2 x [i=5, i=13, i=19, i=21, i=23, i=24, i=29, i=31, i=32]
1 x [i=5, i=15, i=16, i=20, i=20, i=21, i=26, i=33, i=41]
2 x [i=6, i=8, i=9, i=17, i=25, i=26, i=32, i=34, i=40]
1 x [i=6, i=6, i=8, i=23, i=23, i=25, i=31, i=32, i=43]
1 x [i=8, i=9, i=10, i=10, i=30, i=32, i=32, i=33, i=33]
1 x [i=9, i=17, i=21, i=22, i=22, i=23, i=26, i=28, i=29]
2 x [i=9, i=9, i=10, i=10, i=17, i=34, i=34, i=36, i=38]
2 x [i=13, i=16, i=28, i=32, i=33, i=40, i=42, i=42, i=42, i=42]
1 x [i=19, i=20, i=21, i=22, i=39, i=41, i=42, i=42]
