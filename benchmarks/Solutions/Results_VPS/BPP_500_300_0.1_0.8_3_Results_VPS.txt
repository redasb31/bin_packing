Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 28198
  Step-3' Graph: 237 vertices and 10905 arcs (0.05s)
  Step-4' Graph: 235 vertices and 10901 arcs (0.05s)
  #V4/#V3 = 0.99
  #A4/#A3 = 1.00
Ready! (0.05s)
Optimize a model with 419 rows, 10902 columns and 32243 nonzeros
Presolve removed 86 rows and 86 columns
Presolve time: 0.04s
Presolved: 333 rows, 10816 columns, 31963 nonzeros
Variable types: 0 continuous, 10816 integer (2847 binary)
Optimize a model with 333 rows, 10816 columns and 31963 nonzeros
Presolved: 333 rows, 10816 columns, 31963 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 2.054e+04
 Factor NZ  : 3.464e+04 (roughly 5 MBytes of memory)
 Factor Ops : 4.789e+06 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   4.12098937e+04 -2.23778296e+05  3.68e+05 6.13e-02  1.79e+02     0s
   1   1.06485841e+04 -5.95205407e+04  4.49e+04 8.88e-16  2.35e+01     0s
   2   2.41093264e+03 -1.90508905e+04  5.33e+03 1.04e-14  3.27e+00     0s
   3   1.08754258e+03 -6.51868599e+03  6.21e+02 4.66e-15  5.59e-01     0s
   4   6.51919667e+02 -1.14870294e+03  9.73e+01 8.88e-16  1.06e-01     0s
   5   5.53822817e+02 -6.38642841e+02  5.82e+01 9.38e-16  6.63e-02     0s
   6   4.93229500e+02 -5.12729826e+02  4.55e+01 9.37e-16  5.48e-02     0s
   7   4.32377570e+02 -3.08819532e+02  3.13e+01 9.89e-16  3.92e-02     0s
   8   3.96841809e+02 -1.37204296e+02  2.50e+01 9.45e-16  2.82e-02     0s
   9   3.02135347e+02  3.51588473e+01  7.07e+00 8.64e-16  1.32e-02     0s
  10   2.87231398e+02  9.19306713e+01  5.57e+00 8.50e-16  9.64e-03     0s
  11   2.60206918e+02  1.41864577e+02  2.96e+00 8.87e-16  5.76e-03     0s
  12   2.47251079e+02  1.71658043e+02  1.85e+00 8.70e-16  3.66e-03     0s
  13   2.39850849e+02  1.83480861e+02  1.21e+00 1.13e-15  2.71e-03     0s
  14   2.36327659e+02  1.97821602e+02  8.82e-01 9.29e-16  1.85e-03     0s
  15   2.33117344e+02  2.06157962e+02  5.56e-01 8.76e-16  1.29e-03     0s
  16   2.30211961e+02  2.13902557e+02  3.07e-01 8.56e-16  7.74e-04     0s
  17   2.29941212e+02  2.18304006e+02  2.85e-01 8.41e-16  5.56e-04     0s
  18   2.29722152e+02  2.19270492e+02  2.68e-01 9.32e-16  5.00e-04     0s
  19   2.27721543e+02  2.21442426e+02  1.08e-01 9.25e-16  2.96e-04     0s
  20   2.27024196e+02  2.23589224e+02  5.91e-02 8.46e-16  1.62e-04     0s
  21   2.26508191e+02  2.24466608e+02  2.74e-02 8.01e-16  9.57e-05     0s
  22   2.26183447e+02  2.24637862e+02  9.85e-03 1.02e-15  7.18e-05     0s
  23   2.26021340e+02  2.25519278e+02  8.57e-04 7.79e-16  2.32e-05     0s
  24   2.26003833e+02  2.25965618e+02  2.24e-11 9.49e-16  1.76e-06     0s
  25   2.26000029e+02  2.25999870e+02  3.45e-11 1.00e-15  7.33e-09     0s
  26   2.26000000e+02  2.26000000e+02  9.58e-11 1.10e-15  7.74e-15     0s

Barrier solved model in 26 iterations and 0.14 seconds
Optimal objective 2.26000000e+02


Root relaxation: objective 2.260000e+02, 5423 iterations, 0.18 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0  226.00000    0   20          -  226.00000     -      -    0s
H    0     0                     227.0000000  226.00000  0.44%     -    0s
H    0     0                     226.0000000  226.00000  0.00%     -    0s

Explored 0 nodes (8171 simplex iterations) in 0.96 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 2.260000000000e+02, best bound 2.260000000000e+02, gap 0.0%
Preprocessing time: 0.07 seconds
Gurobi run time: 0.96 seconds
Total run time: 1.03 seconds
Objective: 226
Solution:
3 x [i=1, i=155]
2 x [i=2, i=154]
4 x [i=3, i=154]
2 x [i=4, i=152]
1 x [i=4, i=153]
3 x [i=5, i=151]
1 x [i=5, i=152]
1 x [i=6, i=150]
2 x [i=6, i=156]
1 x [i=7, i=179, i=183]
1 x [i=8, i=153]
1 x [i=9, i=149]
1 x [i=10, i=148]
1 x [i=11, i=149]
2 x [i=12, i=146]
1 x [i=12, i=148]
2 x [i=13, i=145]
1 x [i=14, i=145]
1 x [i=14, i=147]
2 x [i=15, i=144]
3 x [i=16, i=144]
3 x [i=17, i=142]
2 x [i=18, i=141]
1 x [i=18, i=142]
1 x [i=18, i=174, i=179]
1 x [i=19, i=140]
3 x [i=20, i=139]
1 x [i=21, i=138]
1 x [i=21, i=140]
1 x [i=21, i=171, i=176]
3 x [i=22, i=136]
1 x [i=22, i=137]
3 x [i=23, i=135]
2 x [i=24, i=134]
1 x [i=25, i=166, i=176]
1 x [i=26, i=134]
1 x [i=26, i=163, i=178]
3 x [i=27, i=133]
2 x [i=27, i=161, i=180]
1 x [i=28, i=135]
1 x [i=28, i=158, i=183]
1 x [i=28, i=160, i=181]
1 x [i=28, i=163, i=176]
1 x [i=29, i=157, i=182]
1 x [i=30, i=132]
1 x [i=31, i=131]
2 x [i=32, i=132]
1 x [i=33, i=129]
3 x [i=33, i=130]
1 x [i=33, i=167, i=168]
1 x [i=34, i=160, i=174]
1 x [i=34, i=160, i=175]
1 x [i=35, i=128]
1 x [i=35, i=161, i=172]
2 x [i=35, i=165, i=167]
1 x [i=35, i=166, i=166]
1 x [i=36, i=127]
1 x [i=36, i=156, i=176]
1 x [i=36, i=163, i=168]
3 x [i=37, i=149, i=184]
3 x [i=37, i=159, i=172]
1 x [i=37, i=162, i=168]
1 x [i=38, i=126]
1 x [i=39, i=125]
1 x [i=39, i=126]
1 x [i=40, i=124]
2 x [i=41, i=124]
2 x [i=42, i=123]
1 x [i=42, i=156, i=170]
2 x [i=43, i=122]
1 x [i=43, i=159, i=165]
1 x [i=44, i=155, i=168]
1 x [i=45, i=160, i=162]
1 x [i=46, i=121]
1 x [i=46, i=152, i=169]
1 x [i=47, i=120]
1 x [i=47, i=121]
1 x [i=48, i=121]
1 x [i=49, i=118]
5 x [i=49, i=119]
2 x [i=50, i=117]
3 x [i=51, i=116]
1 x [i=52, i=115]
2 x [i=53, i=113]
2 x [i=54, i=113]
2 x [i=54, i=114]
1 x [i=55, i=112]
2 x [i=55, i=114]
3 x [i=56, i=137, i=176]
1 x [i=57, i=111]
1 x [i=58, i=110]
1 x [i=58, i=111]
2 x [i=59, i=109]
3 x [i=60, i=108]
1 x [i=61, i=109]
1 x [i=62, i=107]
1 x [i=62, i=110]
3 x [i=63, i=106]
1 x [i=64, i=135, i=170]
4 x [i=65, i=105]
1 x [i=66, i=126, i=183]
2 x [i=67, i=103]
2 x [i=67, i=104]
2 x [i=67, i=105]
3 x [i=68, i=102]
1 x [i=68, i=103]
1 x [i=69, i=101]
3 x [i=69, i=104]
3 x [i=70, i=100]
1 x [i=71, i=99]
1 x [i=71, i=100]
1 x [i=72, i=98]
1 x [i=73, i=97]
3 x [i=74, i=95]
1 x [i=74, i=96]
2 x [i=74, i=98]
2 x [i=75, i=94]
1 x [i=75, i=97]
1 x [i=75, i=100]
2 x [i=76, i=99]
3 x [i=77, i=93]
1 x [i=78, i=92]
4 x [i=78, i=97]
1 x [i=78, i=131, i=164]
2 x [i=79, i=91]
1 x [i=79, i=96]
4 x [i=79, i=121, i=178]
1 x [i=80, i=90]
1 x [i=80, i=115, i=184]
1 x [i=80, i=121, i=177]
2 x [i=81, i=89]
3 x [i=82, i=88]
1 x [i=83, i=88]
1 x [i=83, i=161, i=162, i=173]
2 x [i=84, i=86]
2 x [i=84, i=87]
1 x [i=84, i=143, i=174, i=179]
1 x [i=85, i=85]
