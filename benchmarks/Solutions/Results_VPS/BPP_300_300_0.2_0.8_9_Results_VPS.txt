Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 10218
  Step-3' Graph: 156 vertices and 3222 arcs (0.01s)
  Step-4' Graph: 135 vertices and 3180 arcs (0.01s)
  #V4/#V3 = 0.87
  #A4/#A3 = 0.99
Ready! (0.01s)
Optimize a model with 277 rows, 3181 columns and 9278 nonzeros
Found heuristic solution: objective 297
Presolve removed 80 rows and 96 columns
Presolve time: 0.02s
Presolved: 197 rows, 3085 columns, 8889 nonzeros
Variable types: 0 continuous, 3085 integer (1205 binary)
Optimize a model with 197 rows, 3085 columns and 8889 nonzeros
Presolved: 197 rows, 3085 columns, 8889 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 4.645e+03
 Factor NZ  : 9.945e+03 (roughly 1 MByte of memory)
 Factor Ops : 7.173e+05 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   8.53041397e+03 -3.68696825e+04  8.23e+04 1.84e-01  8.18e+01     0s
   1   2.13097585e+03 -9.47301055e+03  9.87e+03 6.66e-16  1.05e+01     0s
   2   5.00295074e+02 -3.19916932e+03  7.42e+02 4.33e-15  1.17e+00     0s
   3   2.99877962e+02 -4.79933233e+02  5.69e+01 1.89e-15  1.56e-01     0s
   4   2.41981648e+02 -8.95506353e+01  8.98e+00 2.33e-15  5.68e-02     0s
   5   2.07538482e+02  1.78649580e+01  3.83e+00 2.52e-15  3.17e-02     0s
   6   1.91604152e+02  6.27948815e+01  1.52e+00 2.78e-15  2.11e-02     0s
   7   1.81401554e+02  9.89560769e+01  7.30e-01 2.69e-15  1.34e-02     0s
   8   1.70920706e+02  1.37153444e+02  8.08e-02 2.78e-15  5.46e-03     0s
   9   1.68380959e+02  1.66391265e+02  2.06e-03 2.25e-15  3.21e-04     0s
  10   1.68007216e+02  1.67983834e+02  1.07e-06 3.22e-15  3.76e-06     0s
  11   1.68000000e+02  1.68000000e+02  8.60e-12 1.81e-15  8.10e-11     0s
  12   1.68000000e+02  1.68000000e+02  3.02e-13 2.58e-15  9.40e-17     0s

Barrier solved model in 12 iterations and 0.02 seconds
Optimal objective 1.68000000e+02


Root relaxation: objective 1.680000e+02, 951 iterations, 0.02 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0     168.0000000  168.00000  0.00%     -    0s

Explored 0 nodes (951 simplex iterations) in 0.05 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 1.680000000000e+02, best bound 1.680000000000e+02, gap 0.0%
Preprocessing time: 0.02 seconds
Gurobi run time: 0.05 seconds
Total run time: 0.07 seconds
Objective: 168
Solution:
2 x [i=1]
5 x [i=2]
2 x [i=2, i=142]
1 x [i=3]
1 x [i=3, i=141]
3 x [i=4, i=141]
1 x [i=5, i=137]
1 x [i=5, i=138]
1 x [i=5, i=139]
1 x [i=6, i=136]
1 x [i=6, i=140]
2 x [i=7, i=133]
3 x [i=8, i=134]
1 x [i=9, i=131]
1 x [i=10, i=129]
3 x [i=11, i=130]
5 x [i=12]
2 x [i=13, i=126]
1 x [i=14, i=124]
2 x [i=14, i=125]
4 x [i=15]
1 x [i=16, i=123]
3 x [i=17, i=122]
2 x [i=18, i=120]
2 x [i=19, i=123]
2 x [i=20, i=127]
1 x [i=21, i=119]
2 x [i=22, i=118]
4 x [i=23]
4 x [i=24]
2 x [i=25, i=116]
2 x [i=26, i=115]
1 x [i=27, i=121]
2 x [i=28, i=135]
1 x [i=29, i=116]
1 x [i=29, i=132]
2 x [i=30, i=112]
1 x [i=31, i=117]
1 x [i=31, i=134]
4 x [i=32]
1 x [i=33, i=110]
3 x [i=34, i=113]
2 x [i=35, i=111]
1 x [i=36, i=109]
1 x [i=37, i=108]
4 x [i=38, i=128]
3 x [i=39, i=114]
1 x [i=40, i=105]
2 x [i=41, i=104]
1 x [i=41, i=107]
1 x [i=42, i=103]
4 x [i=43, i=106]
1 x [i=44, i=103]
1 x [i=45, i=108]
3 x [i=46, i=102]
1 x [i=47, i=99]
2 x [i=48, i=101]
3 x [i=49, i=97]
1 x [i=49, i=98]
1 x [i=49, i=100]
1 x [i=50, i=96]
1 x [i=51, i=96]
2 x [i=52]
3 x [i=53]
1 x [i=54, i=94]
3 x [i=54, i=95]
2 x [i=55, i=93]
2 x [i=56, i=92]
2 x [i=57, i=91]
2 x [i=57, i=92]
1 x [i=58, i=107]
1 x [i=59]
1 x [i=60, i=94]
2 x [i=61, i=89]
1 x [i=62]
1 x [i=62, i=87]
1 x [i=62, i=88]
1 x [i=62, i=90]
1 x [i=63, i=86]
1 x [i=63, i=90]
3 x [i=64, i=84]
1 x [i=65, i=85]
1 x [i=66, i=83]
1 x [i=66, i=85]
1 x [i=67, i=81]
1 x [i=67, i=83]
1 x [i=68, i=80]
1 x [i=68, i=81]
2 x [i=69, i=78]
1 x [i=70, i=77]
1 x [i=71, i=75]
2 x [i=71, i=78]
1 x [i=72, i=74]
1 x [i=72, i=76]
1 x [i=73, i=80]
1 x [i=79, i=82]
