Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 15203
  Step-3' Graph: 170 vertices and 5609 arcs (0.02s)
  Step-4' Graph: 170 vertices and 5609 arcs (0.02s)
  #V4/#V3 = 1.00
  #A4/#A3 = 1.00
Ready! (0.02s)
Optimize a model with 321 rows, 5610 columns and 16498 nonzeros
Found heuristic solution: objective 591
Presolve removed 63 rows and 81 columns
Presolve time: 0.03s
Presolved: 258 rows, 5529 columns, 16276 nonzeros
Variable types: 0 continuous, 5529 integer (157 binary)
Optimize a model with 258 rows, 5529 columns and 16276 nonzeros
Presolved: 258 rows, 5529 columns, 16276 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 8.773e+03
 Factor NZ  : 1.638e+04 (roughly 2 MBytes of memory)
 Factor Ops : 1.495e+06 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.56937103e+04 -1.06328613e+05  3.78e+05 1.26e-01  8.58e+01     0s
   1   4.95280940e+03 -2.88712504e+04  7.35e+04 6.66e-16  1.71e+01     0s
   2   1.30002486e+03 -1.08922153e+04  9.31e+03 4.22e-15  2.67e+00     0s
   3   7.27830181e+02 -2.77942360e+03  5.26e+02 1.63e-14  3.77e-01     0s
   4   6.61978759e+02 -1.55785631e+03  2.99e+02 9.33e-15  2.29e-01     0s
   5   5.41479037e+02 -7.21128666e+02  1.36e+02 4.66e-15  1.25e-01     0s
   6   4.48941742e+02 -1.49878564e+02  6.06e+01 2.44e-15  5.79e-02     0s
   7   4.07779417e+02  1.55763568e+01  3.10e+01 1.55e-15  3.71e-02     0s
   8   3.71613849e+02  1.44847832e+02  1.40e+01 9.99e-16  2.11e-02     0s
   9   3.61654017e+02  2.83089465e+02  4.04e+00 6.91e-16  7.18e-03     0s
  10   3.43409519e+02  3.17230682e+02  5.72e-01 9.67e-16  2.36e-03     0s
  11   3.40652205e+02  3.26276474e+02  2.59e-01 8.88e-16  1.29e-03     0s
  12   3.40096114e+02  3.32122367e+02  2.02e-01 7.36e-16  7.19e-04     0s
  13   3.39104670e+02  3.34549107e+02  9.14e-02 7.80e-16  4.10e-04     0s
  14   3.38467304e+02  3.35610490e+02  4.03e-02 9.99e-16  2.57e-04     0s
  15   3.38260880e+02  3.36184899e+02  2.75e-02 8.25e-16  1.87e-04     0s
  16   3.38131327e+02  3.36909507e+02  1.89e-02 8.25e-16  1.10e-04     0s
  17   3.37968757e+02  3.37102765e+02  1.01e-02 9.48e-16  7.78e-05     0s
  18   3.37908351e+02  3.37407813e+02  6.70e-03 7.82e-16  4.50e-05     0s
  19   3.37837728e+02  3.37543315e+02  2.93e-03 7.69e-16  2.64e-05     0s
  20   3.37782192e+02  3.37701377e+02  5.81e-04 1.11e-15  7.26e-06     0s
  21   3.37773055e+02  3.37731241e+02  3.33e-04 1.11e-15  3.76e-06     0s
  22   3.37761578e+02  3.37750341e+02  4.36e-05 9.99e-16  1.01e-06     0s
  23   3.37759593e+02  3.37759257e+02  4.31e-06 7.75e-16  3.02e-08     0s
  24   3.37759368e+02  3.37759367e+02  7.64e-12 8.53e-16  6.97e-11     0s
  25   3.37759368e+02  3.37759368e+02  2.67e-12 7.77e-16  1.11e-16     0s

Barrier solved model in 25 iterations and 0.07 seconds
Optimal objective 3.37759368e+02


Root relaxation: objective 3.377594e+02, 344 iterations, 0.07 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0  337.75937    0   63  591.00000  337.75937  42.8%     -    0s
H    0     0                     339.0000000  337.75937  0.37%     -    0s
H    0     0                     338.0000000  337.75937  0.07%     -    0s

Explored 0 nodes (550 simplex iterations) in 0.17 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 3.380000000000e+02, best bound 3.380000000000e+02, gap 0.0%
Preprocessing time: 0.03 seconds
Gurobi run time: 0.17 seconds
Total run time: 0.20 seconds
Objective: 338
Solution:
4 x [i=1, i=123]
5 x [i=2, i=120]
1 x [i=2, i=122]
1 x [i=3, i=119]
2 x [i=3, i=122]
7 x [i=4, i=121]
6 x [i=5, i=117]
3 x [i=6, i=116]
1 x [i=7, i=115]
4 x [i=7, i=119]
2 x [i=8, i=114]
3 x [i=8, i=118]
5 x [i=9, i=113]
2 x [i=10, i=112]
3 x [i=11, i=111]
2 x [i=12, i=110]
1 x [i=13, i=109]
5 x [i=14, i=108]
2 x [i=15, i=109]
2 x [i=16, i=106]
6 x [i=16, i=107]
5 x [i=17, i=105]
1 x [i=17, i=109]
4 x [i=18, i=104]
3 x [i=18, i=106]
3 x [i=19, i=103]
6 x [i=20, i=102]
5 x [i=21, i=101]
2 x [i=22, i=100]
1 x [i=22, i=102]
7 x [i=23, i=99]
5 x [i=24, i=98]
6 x [i=25, i=97]
4 x [i=25, i=100]
3 x [i=26, i=96]
5 x [i=27, i=95]
2 x [i=27, i=96]
3 x [i=28, i=94]
1 x [i=28, i=96]
6 x [i=29, i=93]
2 x [i=29, i=98]
2 x [i=30, i=92]
2 x [i=31, i=91]
3 x [i=32, i=90]
1 x [i=32, i=91]
3 x [i=32, i=150, i=151]
3 x [i=33, i=89]
4 x [i=34, i=88]
2 x [i=34, i=148, i=151]
2 x [i=35, i=87]
1 x [i=35, i=92]
1 x [i=35, i=149, i=149]
2 x [i=36, i=86]
3 x [i=37, i=85]
1 x [i=37, i=148, i=150]
1 x [i=37, i=148, i=148]
4 x [i=38, i=84]
1 x [i=38, i=144, i=151]
2 x [i=38, i=145, i=150]
1 x [i=39, i=83]
5 x [i=40, i=82]
5 x [i=41, i=81]
1 x [i=41, i=141, i=151]
6 x [i=42, i=80]
1 x [i=42, i=81]
4 x [i=43, i=79]
3 x [i=43, i=140, i=150]
5 x [i=44, i=78]
7 x [i=45, i=77]
5 x [i=46, i=76]
1 x [i=46, i=136, i=151]
1 x [i=46, i=139, i=148]
1 x [i=46, i=142, i=145]
4 x [i=47, i=75]
2 x [i=47, i=142, i=144]
5 x [i=48, i=74]
1 x [i=48, i=77]
1 x [i=48, i=78]
5 x [i=49, i=73]
1 x [i=49, i=133, i=151]
1 x [i=50, i=72]
1 x [i=50, i=134, i=149]
2 x [i=50, i=136, i=147]
4 x [i=51, i=71]
1 x [i=51, i=138, i=145]
1 x [i=51, i=139, i=143]
5 x [i=52, i=70]
6 x [i=53, i=69]
4 x [i=54, i=68]
1 x [i=54, i=135, i=144]
1 x [i=54, i=136, i=143]
1 x [i=54, i=137, i=142]
3 x [i=55, i=67]
2 x [i=55, i=139, i=139]
6 x [i=56, i=66]
1 x [i=56, i=134, i=143]
4 x [i=57, i=65]
2 x [i=57, i=130, i=146]
1 x [i=57, i=135, i=141]
6 x [i=58, i=64]
2 x [i=59, i=63]
1 x [i=59, i=133, i=141]
1 x [i=60, i=62]
1 x [i=60, i=135, i=138]
2 x [i=61, i=61]
1 x [i=62, i=64]
2 x [i=62, i=133, i=138]
1 x [i=62, i=135, i=138]
1 x [i=63, i=129, i=141]
2 x [i=63, i=134, i=136]
1 x [i=66, i=133, i=134]
1 x [i=71, i=129, i=133]
1 x [i=72, i=129, i=133]
1 x [i=82, i=124, i=127]
3 x [i=82, i=125, i=126]
1 x [i=83, i=110, i=140]
5 x [i=83, i=124, i=126]
1 x [i=83, i=125, i=128]
2 x [i=91, i=110, i=132]
1 x [i=92, i=109, i=133]
1 x [i=92, i=110, i=131]
1 x [i=92, i=111, i=130]
1 x [i=92, i=113, i=128]
1 x [i=92, i=127, i=129]
1 x [i=103, i=103, i=127]
1 x [i=109, i=110, i=128]
1 x [i=123, i=128, i=146, i=148]
1 x [i=128, i=132, i=148, i=149]
1 x [i=129, i=131, i=133, i=151]
1 x [i=132, i=132, i=136, i=146]
