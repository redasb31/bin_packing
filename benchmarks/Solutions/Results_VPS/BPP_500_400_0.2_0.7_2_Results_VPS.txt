Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 22233
  Step-3' Graph: 233 vertices and 8426 arcs (0.04s)
  Step-4' Graph: 209 vertices and 8378 arcs (0.04s)
  #V4/#V3 = 0.90
  #A4/#A3 = 0.99
Ready! (0.04s)
Optimize a model with 396 rows, 8379 columns and 24724 nonzeros
Found heuristic solution: objective 396
Presolve removed 78 rows and 96 columns
Presolve time: 0.04s
Presolved: 318 rows, 8283 columns, 24186 nonzeros
Variable types: 0 continuous, 8283 integer (2306 binary)
Optimize a model with 318 rows, 8283 columns and 24186 nonzeros
Presolved: 318 rows, 8283 columns, 24186 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 1.307e+04
 Factor NZ  : 2.514e+04 (roughly 4 MBytes of memory)
 Factor Ops : 2.924e+06 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.95548009e+04 -1.67499423e+05  2.94e+05 1.43e-01  1.23e+02     0s
   1   5.43986765e+03 -3.78775739e+04  4.15e+04 1.44e-15  1.81e+01     0s
   2   1.21013542e+03 -1.31732426e+04  4.09e+03 2.04e-14  2.25e+00     0s
   3   6.04625659e+02 -2.94515553e+03  3.04e+02 5.77e-15  2.87e-01     0s
   4   4.79902971e+02 -1.19522966e+03  9.41e+01 2.66e-15  1.18e-01     0s
   5   4.39759670e+02 -6.54169757e+02  7.34e+01 1.44e-15  7.77e-02     0s
   6   3.45529389e+02 -3.37187528e+02  2.92e+01 7.77e-16  4.53e-02     0s
   7   3.08151475e+02 -7.65387568e+01  1.69e+01 5.88e-16  2.51e-02     0s
   8   2.75368548e+02  6.67241063e+00  7.81e+00 7.15e-16  1.70e-02     0s
   9   2.52035285e+02  7.79500566e+01  3.26e+00 6.59e-16  1.07e-02     0s
  10   2.41474135e+02  1.25925004e+02  1.91e+00 7.06e-16  7.08e-03     0s
  11   2.39937267e+02  1.60863780e+02  1.20e+00 6.00e-16  4.82e-03     0s
  12   2.34263809e+02  1.88077343e+02  5.64e-01 5.86e-16  2.80e-03     0s
  13   2.32359347e+02  1.93299361e+02  3.67e-01 7.42e-16  2.36e-03     0s
  14   2.29707721e+02  2.11449646e+02  1.38e-01 5.27e-16  1.10e-03     0s
  15   2.28625758e+02  2.18828555e+02  6.07e-02 5.31e-16  5.90e-04     0s
  16   2.28229387e+02  2.20268414e+02  4.06e-02 6.46e-16  4.79e-04     0s
  17   2.27577235e+02  2.23219019e+02  1.57e-02 6.12e-16  2.62e-04     0s
  18   2.27369101e+02  2.24567033e+02  9.46e-03 5.87e-16  1.68e-04     0s
  19   2.27193925e+02  2.25437700e+02  5.40e-03 6.13e-16  1.06e-04     0s
  20   2.27040443e+02  2.25925665e+02  2.22e-03 6.36e-16  6.70e-05     0s
  21   2.26935115e+02  2.26460962e+02  3.31e-04 5.55e-16  2.85e-05     0s
  22   2.26908443e+02  2.26848663e+02  2.22e-05 4.84e-16  3.59e-06     0s
  23   2.26894303e+02  2.26892442e+02  3.00e-07 5.77e-16  1.12e-07     0s
  24   2.26893688e+02  2.26893686e+02  1.41e-12 6.09e-16  1.12e-10     0s
  25   2.26893688e+02  2.26893688e+02  1.29e-12 5.25e-16  1.12e-13     0s

Barrier solved model in 25 iterations and 0.11 seconds
Optimal objective 2.26893688e+02


Root relaxation: objective 2.268937e+02, 493 iterations, 0.11 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0  226.89369    0   55  396.00000  226.89369  42.7%     -    0s
H    0     0                     228.0000000  226.89369  0.49%     -    0s
H    0     0                     227.0000000  226.89369  0.05%     -    0s

Explored 0 nodes (1102 simplex iterations) in 0.27 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 2.270000000000e+02, best bound 2.270000000000e+02, gap 0.0%
Preprocessing time: 0.05 seconds
Gurobi run time: 0.27 seconds
Total run time: 0.32 seconds
Objective: 227
Solution:
2 x [i=1, i=152]
1 x [i=2, i=149]
3 x [i=3, i=147]
3 x [i=3, i=148]
2 x [i=3, i=153]
3 x [i=4, i=146]
2 x [i=5, i=154]
1 x [i=6, i=144]
2 x [i=6, i=151]
1 x [i=7, i=143]
1 x [i=8, i=145]
1 x [i=9, i=140]
2 x [i=9, i=142]
1 x [i=10, i=139]
3 x [i=10, i=141]
1 x [i=10, i=150]
3 x [i=11, i=138]
1 x [i=11, i=155]
6 x [i=12, i=140]
1 x [i=13, i=136]
2 x [i=14, i=135]
3 x [i=15, i=134]
1 x [i=15, i=135]
2 x [i=16, i=133]
3 x [i=17, i=132]
1 x [i=18, i=131]
5 x [i=18, i=137]
2 x [i=19, i=130]
3 x [i=20, i=129]
1 x [i=20, i=130]
2 x [i=21, i=128]
1 x [i=21, i=133]
2 x [i=22, i=127]
1 x [i=23, i=126]
1 x [i=24, i=126]
3 x [i=25, i=124]
3 x [i=26, i=125]
2 x [i=27, i=123]
1 x [i=28, i=122]
1 x [i=29, i=121]
3 x [i=30, i=120]
2 x [i=31, i=118]
2 x [i=32, i=117]
2 x [i=33, i=117]
3 x [i=34, i=116]
1 x [i=35, i=117]
2 x [i=36, i=114]
1 x [i=36, i=124]
1 x [i=37, i=112]
1 x [i=38, i=113]
2 x [i=38, i=114]
1 x [i=38, i=115]
1 x [i=39, i=112]
3 x [i=40, i=110]
1 x [i=40, i=111]
1 x [i=41, i=109]
2 x [i=41, i=112]
1 x [i=42, i=109]
1 x [i=42, i=183, i=186]
3 x [i=42, i=184, i=185]
3 x [i=43, i=108]
1 x [i=43, i=183, i=187]
4 x [i=44, i=107]
1 x [i=45, i=107]
2 x [i=46, i=104]
1 x [i=47, i=106]
2 x [i=48, i=102]
1 x [i=48, i=106]
2 x [i=49, i=101]
1 x [i=50, i=100]
1 x [i=51, i=100]
1 x [i=52, i=98]
2 x [i=52, i=100]
1 x [i=53, i=98]
2 x [i=54, i=96]
1 x [i=54, i=97]
1 x [i=54, i=99]
1 x [i=55, i=95]
1 x [i=55, i=173, i=182]
1 x [i=55, i=177, i=178]
3 x [i=56, i=94]
1 x [i=57, i=100]
2 x [i=57, i=171, i=182]
2 x [i=57, i=174, i=179]
1 x [i=57, i=176, i=178]
1 x [i=58, i=167, i=186]
1 x [i=58, i=171, i=181]
1 x [i=58, i=172, i=180]
1 x [i=58, i=175, i=177]
2 x [i=59, i=93]
2 x [i=60, i=92]
1 x [i=60, i=167, i=184]
1 x [i=60, i=170, i=181]
3 x [i=61, i=91]
2 x [i=62, i=90]
1 x [i=62, i=91]
1 x [i=63, i=89]
2 x [i=64, i=88]
1 x [i=64, i=89]
3 x [i=65, i=87]
3 x [i=66, i=86]
1 x [i=66, i=158, i=187]
1 x [i=66, i=168, i=177]
2 x [i=67, i=85]
2 x [i=68, i=84]
1 x [i=69, i=83]
1 x [i=70, i=82]
1 x [i=71, i=81]
4 x [i=72, i=80]
1 x [i=73, i=79]
1 x [i=73, i=157, i=181]
1 x [i=73, i=158, i=180]
1 x [i=73, i=167, i=171]
4 x [i=74, i=78]
1 x [i=75, i=77]
1 x [i=75, i=78]
2 x [i=76, i=76]
1 x [i=81, i=165, i=166]
1 x [i=82, i=162, i=168]
1 x [i=83, i=157, i=176]
1 x [i=84, i=164, i=167]
1 x [i=85, i=158, i=169]
1 x [i=85, i=161, i=166]
1 x [i=85, i=163, i=164]
1 x [i=85, i=166, i=168]
1 x [i=89, i=157, i=166]
1 x [i=89, i=158, i=165]
1 x [i=93, i=158, i=162]
1 x [i=93, i=159, i=160]
1 x [i=100, i=155, i=155]
2 x [i=103, i=152, i=156]
1 x [i=105, i=151, i=156]
1 x [i=118, i=118, i=171]
2 x [i=119, i=120, i=169]
1 x [i=119, i=127, i=161]
1 x [i=120, i=125, i=162]
1 x [i=121, i=125, i=163]
1 x [i=121, i=126, i=160]
