Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 3700
  Step-3' Graph: 109 vertices and 2021 arcs (0.00s)
  Step-4' Graph: 107 vertices and 2017 arcs (0.00s)
  #V4/#V3 = 0.98
  #A4/#A3 = 1.00
Ready! (0.00s)
Optimize a model with 168 rows, 2018 columns and 5845 nonzeros
Found heuristic solution: objective 73
Presolve removed 24 rows and 27 columns
Presolve time: 0.02s
Presolved: 144 rows, 1991 columns, 5764 nonzeros
Variable types: 0 continuous, 1991 integer (985 binary)
Optimize a model with 144 rows, 1991 columns and 5764 nonzeros
Presolved: 144 rows, 1991 columns, 5764 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 3.595e+03
 Factor NZ  : 7.144e+03
 Factor Ops : 4.936e+05 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.35150068e+03 -7.41229741e+03  5.02e+03 6.57e-02  1.22e+01     0s
   1   3.99258017e+02 -2.58864018e+03  6.50e+02 9.99e-16  1.96e+00     0s
   2   1.67000629e+02 -8.94284298e+02  1.08e+02 1.31e-02  4.38e-01     0s
   3   8.82708147e+01 -1.09478222e+02  6.89e+00 1.10e-03  5.74e-02     0s
   4   6.13363551e+01 -2.05990777e+01  2.33e+00 2.88e-04  2.22e-02     0s
   5   4.95538925e+01  9.79520726e+00  1.04e+00 1.17e-05  1.05e-02     0s
   6   4.47192445e+01  2.15503262e+01  6.28e-01 6.49e-16  6.05e-03     0s
   7   4.26466562e+01  2.78505633e+01  4.48e-01 6.42e-16  3.84e-03     0s
   8   4.20709296e+01  3.31362934e+01  3.53e-01 6.16e-16  2.31e-03     0s
   9   4.00600599e+01  3.53885395e+01  9.51e-02 4.68e-16  1.18e-03     0s
  10   3.95255670e+01  3.71412100e+01  4.80e-02 5.22e-16  6.01e-04     0s
  11   3.92546050e+01  3.77142285e+01  2.92e-02 6.37e-16  3.88e-04     0s
  12   3.90802508e+01  3.80654172e+01  1.80e-02 6.64e-16  2.55e-04     0s
  13   3.89465995e+01  3.83288695e+01  1.04e-02 5.82e-16  1.55e-04     0s
  14   3.88270683e+01  3.84619405e+01  4.29e-03 7.00e-16  9.15e-05     0s
  15   3.87876711e+01  3.85305936e+01  3.04e-03 6.82e-16  6.44e-05     0s
  16   3.87635385e+01  3.85875856e+01  2.25e-03 6.40e-16  4.41e-05     0s
  17   3.87320765e+01  3.86498252e+01  1.01e-03 5.08e-16  2.06e-05     0s
  18   3.87066280e+01  3.86723923e+01  3.55e-04 6.35e-16  8.57e-06     0s
  19   3.87007336e+01  3.86800573e+01  2.41e-04 8.07e-16  5.18e-06     0s
  20   3.86976250e+01  3.86873563e+01  1.63e-04 5.17e-16  2.57e-06     0s
  21   3.86944844e+01  3.86925477e+01  1.67e-05 6.54e-16  4.85e-07     0s
  22   3.86933350e+01  3.86933280e+01  2.68e-12 5.84e-16  1.74e-09     0s
  23   3.86933333e+01  3.86933333e+01  1.84e-11 6.87e-16  2.10e-15     0s

Barrier solved model in 23 iterations and 0.02 seconds
Optimal objective 3.86933333e+01


Root relaxation: objective 3.869333e+01, 1150 iterations, 0.03 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   38.69333    0   32   73.00000   38.69333  47.0%     -    0s
H    0     0                      40.0000000   38.69333  3.27%     -    0s
H    0     0                      39.0000000   38.69333  0.79%     -    0s

Explored 0 nodes (2434 simplex iterations) in 0.11 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 3.900000000000e+01, best bound 3.900000000000e+01, gap 0.0%
Preprocessing time: 0.00 seconds
Gurobi run time: 0.11 seconds
Total run time: 0.11 seconds
Objective: 39
Solution:
1 x [i=1, i=41]
1 x [i=1, i=52, i=58]
1 x [i=1, i=53, i=57]
1 x [i=2, i=40]
1 x [i=3, i=39]
1 x [i=3, i=51, i=60]
2 x [i=4, i=37]
1 x [i=4, i=48, i=61]
1 x [i=5, i=35]
1 x [i=6, i=34]
1 x [i=7, i=32]
1 x [i=8, i=47, i=57]
1 x [i=8, i=49, i=55]
1 x [i=9, i=47, i=56]
1 x [i=10, i=30]
1 x [i=11, i=45, i=58]
1 x [i=12, i=43, i=60]
1 x [i=13, i=27]
1 x [i=13, i=28]
1 x [i=14, i=38, i=59]
1 x [i=15, i=26]
2 x [i=16, i=25]
1 x [i=17, i=36, i=57]
1 x [i=18, i=30, i=61]
2 x [i=19, i=22]
1 x [i=20, i=31, i=59]
1 x [i=20, i=43, i=50]
1 x [i=21, i=42, i=50]
1 x [i=22, i=33, i=54]
2 x [i=23, i=44, i=46]
1 x [i=24, i=29, i=58]
2 x [i=26, i=29, i=55]
1 x [i=28, i=40]
1 x [i=30, i=36, i=43]
