Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 8378
  Step-3' Graph: 114 vertices and 2605 arcs (0.01s)
  Step-4' Graph: 114 vertices and 2605 arcs (0.01s)
  #V4/#V3 = 1.00
  #A4/#A3 = 1.00
Ready! (0.01s)
Optimize a model with 234 rows, 2606 columns and 7598 nonzeros
Found heuristic solution: objective 598
Presolve removed 66 rows and 77 columns
Presolve time: 0.01s
Presolved: 168 rows, 2529 columns, 7370 nonzeros
Variable types: 0 continuous, 2529 integer (53 binary)
Optimize a model with 168 rows, 2529 columns and 7370 nonzeros
Presolved: 168 rows, 2529 columns, 7370 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 3.938e+03
 Factor NZ  : 7.474e+03 (roughly 1 MByte of memory)
 Factor Ops : 4.550e+05 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.99036126e+04 -5.89041796e+04  3.56e+05 8.66e-02  2.36e+02     0s
   1   5.22168216e+03 -1.85401264e+04  5.40e+04 9.99e-16  3.68e+01     0s
   2   1.00656979e+03 -8.74753081e+03  3.04e+03 4.22e-15  3.53e+00     0s
   3   7.15989426e+02 -1.91454401e+03  2.55e+02 1.94e-14  5.98e-01     0s
   4   6.23751955e+02 -6.82532867e+02  5.80e+01 9.10e-15  2.70e-01     0s
   5   5.22583644e+02 -7.86749384e+00  2.28e+01 3.11e-15  1.08e-01     0s
   6   4.55251103e+02  1.15404927e+02  7.90e+00 1.78e-15  6.78e-02     0s
   7   4.10611163e+02  2.49118274e+02  1.70e+00 1.11e-15  3.18e-02     0s
   8   3.96364545e+02  3.53036958e+02  2.67e-01 9.19e-16  8.51e-03     0s
   9   3.93766108e+02  3.85428092e+02  1.15e-03 1.11e-15  1.63e-03     0s
  10   3.93011429e+02  3.92960584e+02  3.21e-06 8.01e-16  9.94e-06     0s
  11   3.93000012e+02  3.92999960e+02  1.30e-12 8.77e-16  1.00e-08     0s
  12   3.93000000e+02  3.93000000e+02  1.29e-12 7.13e-16  1.00e-11     0s

Barrier solved model in 12 iterations and 0.02 seconds
Optimal objective 3.93000000e+02


Root relaxation: objective 3.930000e+02, 521 iterations, 0.02 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0     393.0000000  393.00000  0.00%     -    0s

Explored 0 nodes (521 simplex iterations) in 0.03 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 3.930000000000e+02, best bound 3.930000000000e+02, gap 0.0%
Preprocessing time: 0.01 seconds
Gurobi run time: 0.03 seconds
Total run time: 0.04 seconds
Objective: 393
Solution:
9 x [i=1]
2 x [i=2, i=119]
7 x [i=2, i=120]
3 x [i=3]
7 x [i=4, i=118]
7 x [i=5, i=116]
3 x [i=5, i=119]
1 x [i=6, i=115]
1 x [i=6, i=117]
1 x [i=6, i=119]
5 x [i=7, i=115]
5 x [i=8, i=117]
1 x [i=9, i=112]
3 x [i=9, i=114]
8 x [i=10, i=112]
4 x [i=11, i=111]
1 x [i=11, i=113]
12 x [i=12]
2 x [i=13, i=108]
6 x [i=13, i=113]
6 x [i=14, i=107]
7 x [i=15, i=106]
1 x [i=15, i=109]
2 x [i=16, i=109]
8 x [i=17, i=105]
4 x [i=18, i=103]
1 x [i=19, i=103]
11 x [i=20, i=110]
12 x [i=21]
6 x [i=22, i=100]
1 x [i=22, i=103]
1 x [i=23, i=98]
5 x [i=23, i=101]
10 x [i=24, i=114]
6 x [i=25, i=96]
4 x [i=26, i=95]
6 x [i=27, i=97]
1 x [i=28, i=93]
7 x [i=28, i=102]
1 x [i=29, i=92]
6 x [i=30, i=94]
2 x [i=30, i=98]
4 x [i=31, i=90]
1 x [i=31, i=109]
5 x [i=32, i=89]
4 x [i=33, i=88]
1 x [i=33, i=89]
2 x [i=34, i=87]
8 x [i=34, i=104]
2 x [i=35, i=86]
7 x [i=35, i=91]
2 x [i=36, i=99]
3 x [i=37, i=87]
7 x [i=38, i=84]
4 x [i=38, i=85]
6 x [i=39, i=82]
5 x [i=39, i=83]
4 x [i=40, i=81]
3 x [i=40, i=93]
7 x [i=41, i=80]
1 x [i=42, i=80]
2 x [i=43, i=78]
1 x [i=43, i=79]
6 x [i=44, i=78]
8 x [i=45, i=77]
1 x [i=45, i=80]
6 x [i=46, i=75]
6 x [i=46, i=76]
2 x [i=47, i=74]
5 x [i=48, i=79]
3 x [i=49, i=73]
1 x [i=49, i=80]
5 x [i=50, i=72]
3 x [i=50, i=73]
4 x [i=51, i=70]
2 x [i=52, i=70]
7 x [i=52, i=73]
7 x [i=53, i=69]
2 x [i=54, i=68]
1 x [i=54, i=69]
5 x [i=55, i=67]
1 x [i=55, i=68]
3 x [i=56, i=68]
2 x [i=57, i=66]
5 x [i=57, i=68]
5 x [i=58, i=64]
2 x [i=58, i=65]
2 x [i=58, i=66]
1 x [i=59, i=63]
6 x [i=59, i=65]
4 x [i=60, i=62]
5 x [i=60, i=63]
5 x [i=61, i=71]
2 x [i=66, i=79]
1 x [i=70, i=79]
