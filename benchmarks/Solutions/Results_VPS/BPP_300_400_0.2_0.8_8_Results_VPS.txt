Copyright (C) 2013-2015, Filipe Brandao
Build (method = -2)
  #dp: 14110
  Step-3' Graph: 198 vertices and 5381 arcs (0.02s)
  Step-4' Graph: 171 vertices and 5327 arcs (0.02s)
  #V4/#V3 = 0.86
  #A4/#A3 = 0.99
Ready! (0.02s)
Optimize a model with 339 rows, 5328 columns and 15646 nonzeros
Found heuristic solution: objective 244
Presolve removed 85 rows and 100 columns
Presolve time: 0.03s
Presolved: 254 rows, 5228 columns, 15003 nonzeros
Variable types: 0 continuous, 5228 integer (3047 binary)
Optimize a model with 254 rows, 5228 columns and 15003 nonzeros
Presolved: 254 rows, 5228 columns, 15003 nonzeros

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 7.907e+03
 Factor NZ  : 1.626e+04 (roughly 2 MBytes of memory)
 Factor Ops : 1.432e+06 (less than 1 second per iteration)
 Threads    : 1

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   9.41290162e+03 -4.00171212e+04  1.03e+05 1.72e-01  4.71e+01     0s
   1   2.14431476e+03 -9.27743744e+03  1.28e+04 1.22e-15  6.18e+00     0s
   2   5.28603966e+02 -3.02926981e+03  1.06e+03 2.33e-15  7.27e-01     0s
   3   2.94900876e+02 -6.10678636e+02  9.50e+01 1.11e-15  1.13e-01     0s
   4   2.19536355e+02 -2.11510195e+02  1.64e+01 6.66e-16  4.50e-02     0s
   5   1.93591128e+02  4.73742350e+00  6.60e+00 7.49e-16  1.92e-02     0s
   6   1.82815615e+02  4.79548556e+01  3.24e+00 7.70e-16  1.34e-02     0s
   7   1.73378231e+02  7.43964499e+01  1.89e+00 7.60e-16  9.72e-03     0s
   8   1.60172536e+02  1.19098174e+02  2.73e-01 6.92e-16  3.95e-03     0s
   9   1.56696308e+02  1.53995266e+02  4.00e-02 6.78e-16  2.64e-04     0s
  10   1.56020024e+02  1.55950812e+02  4.08e-04 8.84e-16  6.67e-06     0s
  11   1.56000008e+02  1.55999977e+02  1.26e-07 8.98e-16  3.00e-09     0s
  12   1.56000000e+02  1.56000000e+02  2.78e-11 8.23e-16  3.01e-15     0s

Barrier solved model in 12 iterations and 0.04 seconds
Optimal objective 1.56000000e+02


Root relaxation: objective 1.560000e+02, 1236 iterations, 0.04 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0     156.0000000  156.00000  0.00%     -    0s

Explored 0 nodes (1450 simplex iterations) in 0.08 seconds
Thread count was 1 (of 4 available processors)

Optimal solution found (tolerance 0.00e+00)
Best objective 1.560000000000e+02, best bound 1.560000000000e+02, gap 0.0%
Preprocessing time: 0.03 seconds
Gurobi run time: 0.08 seconds
Total run time: 0.11 seconds
Objective: 156
Solution:
1 x [i=1]
1 x [i=2]
2 x [i=3]
1 x [i=4, i=167]
2 x [i=5]
1 x [i=6, i=168]
3 x [i=7]
2 x [i=8, i=164]
2 x [i=9, i=163]
1 x [i=10, i=162]
1 x [i=11, i=160]
3 x [i=12]
1 x [i=13, i=159]
1 x [i=13, i=161]
2 x [i=13, i=162]
1 x [i=14, i=154]
1 x [i=15, i=153]
3 x [i=16, i=157]
1 x [i=17, i=151]
1 x [i=18, i=150]
1 x [i=19, i=149]
2 x [i=20, i=158]
1 x [i=21, i=146]
1 x [i=22, i=143]
1 x [i=22, i=147]
3 x [i=23, i=145]
1 x [i=24, i=139]
2 x [i=24, i=140]
2 x [i=25, i=137]
3 x [i=25, i=144]
1 x [i=26, i=134]
2 x [i=27, i=142]
1 x [i=28, i=132]
3 x [i=29, i=136]
1 x [i=30, i=133]
1 x [i=31, i=130]
1 x [i=32, i=129]
1 x [i=33, i=129]
1 x [i=34, i=127]
2 x [i=34, i=128]
1 x [i=35, i=131]
3 x [i=36, i=125]
1 x [i=36, i=135]
2 x [i=37, i=124]
1 x [i=37, i=148]
1 x [i=38, i=123]
2 x [i=39, i=122]
1 x [i=39, i=152]
1 x [i=40, i=120]
2 x [i=41, i=119]
1 x [i=42, i=118]
1 x [i=43, i=121]
2 x [i=44, i=116]
1 x [i=44, i=156]
1 x [i=45, i=115]
2 x [i=45, i=117]
2 x [i=46, i=114]
2 x [i=47, i=126]
1 x [i=48, i=112]
1 x [i=48, i=113]
1 x [i=49, i=114]
1 x [i=50, i=111]
2 x [i=51, i=109]
1 x [i=51, i=110]
1 x [i=52, i=110]
1 x [i=53, i=111]
1 x [i=54, i=111]
1 x [i=55]
1 x [i=55, i=108]
1 x [i=56, i=154]
1 x [i=57, i=107]
1 x [i=57, i=141]
1 x [i=58, i=105]
1 x [i=58, i=106]
1 x [i=58, i=138]
1 x [i=59, i=104]
1 x [i=59, i=107]
1 x [i=59, i=155]
1 x [i=60, i=103]
2 x [i=61, i=101]
1 x [i=62, i=111]
1 x [i=62, i=165, i=166]
2 x [i=63, i=100]
1 x [i=64, i=98]
1 x [i=64, i=99]
2 x [i=64, i=102]
1 x [i=65, i=97]
1 x [i=66, i=96]
3 x [i=67, i=96]
2 x [i=68, i=94]
2 x [i=68, i=95]
1 x [i=69, i=97]
1 x [i=70, i=92]
2 x [i=70, i=93]
1 x [i=70, i=95]
1 x [i=71, i=91]
2 x [i=72, i=90]
2 x [i=73, i=88]
1 x [i=74, i=87]
2 x [i=75, i=87]
1 x [i=76, i=85]
1 x [i=76, i=97]
3 x [i=77, i=86]
1 x [i=77, i=89]
1 x [i=78, i=83]
1 x [i=79, i=82]
2 x [i=80, i=81]
1 x [i=80, i=80]
1 x [i=83, i=91]
1 x [i=84, i=91]
